@compute @workgroup_size(1, 1, 1) 
fn main() {
    var i: i32 = 0;
    var i2_: vec2<i32> = vec2(0);
    var i3_: vec3<i32> = vec3(0);
    var i4_: vec4<i32> = vec4(0);
    var u: u32 = 0u;
    var u2_: vec2<u32> = vec2(0u);
    var u3_: vec3<u32> = vec3(0u);
    var u4_: vec4<u32> = vec4(0u);
    var f2_: vec2<f32> = vec2(0.0);
    var f4_: vec4<f32> = vec4(0.0);

    let _e28 = f4_;
    u = pack4x8snorm(_e28);
    let _e30 = f4_;
    u = pack4x8unorm(_e30);
    let _e32 = f2_;
    u = pack2x16snorm(_e32);
    let _e34 = f2_;
    u = pack2x16unorm(_e34);
    let _e36 = f2_;
    u = pack2x16float(_e36);
    let _e38 = u;
    f4_ = unpack4x8snorm(_e38);
    let _e40 = u;
    f4_ = unpack4x8unorm(_e40);
    let _e42 = u;
    f2_ = unpack2x16snorm(_e42);
    let _e44 = u;
    f2_ = unpack2x16unorm(_e44);
    let _e46 = u;
    f2_ = unpack2x16float(_e46);
    let _e48 = i;
    let _e49 = i;
    i = insertBits(_e48, _e49, 5u, 10u);
    let _e53 = i2_;
    let _e54 = i2_;
    i2_ = insertBits(_e53, _e54, 5u, 10u);
    let _e58 = i3_;
    let _e59 = i3_;
    i3_ = insertBits(_e58, _e59, 5u, 10u);
    let _e63 = i4_;
    let _e64 = i4_;
    i4_ = insertBits(_e63, _e64, 5u, 10u);
    let _e68 = u;
    let _e69 = u;
    u = insertBits(_e68, _e69, 5u, 10u);
    let _e73 = u2_;
    let _e74 = u2_;
    u2_ = insertBits(_e73, _e74, 5u, 10u);
    let _e78 = u3_;
    let _e79 = u3_;
    u3_ = insertBits(_e78, _e79, 5u, 10u);
    let _e83 = u4_;
    let _e84 = u4_;
    u4_ = insertBits(_e83, _e84, 5u, 10u);
    let _e88 = i;
    i = extractBits(_e88, 5u, 10u);
    let _e92 = i2_;
    i2_ = extractBits(_e92, 5u, 10u);
    let _e96 = i3_;
    i3_ = extractBits(_e96, 5u, 10u);
    let _e100 = i4_;
    i4_ = extractBits(_e100, 5u, 10u);
    let _e104 = u;
    u = extractBits(_e104, 5u, 10u);
    let _e108 = u2_;
    u2_ = extractBits(_e108, 5u, 10u);
    let _e112 = u3_;
    u3_ = extractBits(_e112, 5u, 10u);
    let _e116 = u4_;
    u4_ = extractBits(_e116, 5u, 10u);
    let _e120 = i;
    i = firstTrailingBit(_e120);
    let _e122 = u2_;
    u2_ = firstTrailingBit(_e122);
    let _e124 = i3_;
    i3_ = firstLeadingBit(_e124);
    let _e126 = u3_;
    u3_ = firstLeadingBit(_e126);
    let _e128 = i;
    i = firstLeadingBit(_e128);
    let _e130 = u;
    u = firstLeadingBit(_e130);
    let _e132 = i;
    i = countOneBits(_e132);
    let _e134 = i2_;
    i2_ = countOneBits(_e134);
    let _e136 = i3_;
    i3_ = countOneBits(_e136);
    let _e138 = i4_;
    i4_ = countOneBits(_e138);
    let _e140 = u;
    u = countOneBits(_e140);
    let _e142 = u2_;
    u2_ = countOneBits(_e142);
    let _e144 = u3_;
    u3_ = countOneBits(_e144);
    let _e146 = u4_;
    u4_ = countOneBits(_e146);
    let _e148 = i;
    i = reverseBits(_e148);
    let _e150 = i2_;
    i2_ = reverseBits(_e150);
    let _e152 = i3_;
    i3_ = reverseBits(_e152);
    let _e154 = i4_;
    i4_ = reverseBits(_e154);
    let _e156 = u;
    u = reverseBits(_e156);
    let _e158 = u2_;
    u2_ = reverseBits(_e158);
    let _e160 = u3_;
    u3_ = reverseBits(_e160);
    let _e162 = u4_;
    u4_ = reverseBits(_e162);
    return;
}
