language: rust
sudo: false
dist: xenial

matrix:
  include:
    # Linux 64bit
    - os: linux
      rust: stable
      compiler: gcc
      env:
        - BUILD_COMMAND=clippy
    #TODO: unlock when libglfw3 on Ubuntu comes with Vulkan support
    # or when we add a GL backend.
    #- os: linux
    #  rust: nightly
    #  compiler: gcc
    #  env:
    #    - BUILD_COMMAND=check

    # Windows 64bit
    - os: windows
      rust: stable
      env:
        - BUILD_COMMAND=clippy
    - os: windows
      rust: nightly
      env:
        - BUILD_COMMAND=check

    # macOS 64bit
    - os: osx
      osx_image: xcode9.4
      rust: stable
      compiler: clang
      env:
        - MACOSX_DEPLOYMENT_TARGET=10.9
        - BUILD_COMMAND=clippy
    - os: osx
      osx_image: xcode9.4
      rust: nightly
      compiler: clang
      env:
        - MACOSX_DEPLOYMENT_TARGET=10.9
        - BUILD_COMMAND=check

    # iPhoneOS 64bit
    - os: osx
      osx_image: xcode11
      rust: stable
      env:
        - TARGET=aarch64-apple-ios
        - BUILD_COMMAND=clippy

branches:
  except:
  - staging.tmp

before_install:
- if [[ $TRAVIS_RUST_VERSION != "nightly" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then rustup default stable-msvc; fi
- if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then rustup default nightly-msvc; fi

before_script:
  - if [[ $BUILD_COMMAND == "clippy" ]]; then rustup component add clippy; fi

script:
  - cargo test
  - (cd wgpu-core && cargo $BUILD_COMMAND --all-features)
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then cargo $BUILD_COMMAND --release; fi
